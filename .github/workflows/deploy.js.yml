# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    # strategy:
    #   matrix:
    #     node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build
      # working-directory: ./app
      run: docker build -t nodejsapp .
    - name: Tags
      # working-directory: ./app
      run: |
        docker tag nodejsapp ${{ secrets.DOCKER_HUB_USERNAME }}/nodejsapp:latest
    - name: Push
      # working-directory: ./app
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nodejsapp:latest
    
    # - name: Set up Docker Buildx
    #   id: buildx
    #   uses: docker/setup-buildx-action@v1

    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   run: pwd
    #   with:
    #     context: ./
    #     file: ./Dockerfile
    #     push: true
    #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nodejsapp:latest

    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}

    # - run: cd app/
    # - run: docker build -t app .
    # - run: docker run -d -p 3000:3000 app
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
